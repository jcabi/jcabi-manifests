 ------
 Versioning of JAR/WAR Application
 ------
 Yegor Bugayenko
 ------
 2012-12-2
 ------

~~
~~ #set($sign="$")
~~ Copyright (c) 2012-2025, jcabi.com
~~ All rights reserved.
~~
~~ Redistribution and use in source and binary forms, with or without
~~ modification, are permitted provided that the following conditions
~~ are met: 1) Redistributions of source code must retain the above
~~ copyright notice, this list of conditions and the following
~~ disclaimer. 2) Redistributions in binary form must reproduce the above
~~ copyright notice, this list of conditions and the following
~~ disclaimer in the documentation and/or other materials provided
~~ with the distribution. 3) Neither the name of the jcabi.com nor
~~ the names of its contributors may be used to endorse or promote
~~ products derived from this software without specific prior written
~~ permission.
~~
~~ THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
~~ "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT
~~ NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
~~ FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL
~~ THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
~~ INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
~~ (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
~~ SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
~~ HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
~~ STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
~~ ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
~~ OF THE POSSIBILITY OF SUCH DAMAGE.
~~

Versioning of JAR/WAR Application

  Oracle
  {{{http://docs.oracle.com/javase/tutorial/deployment/jar/packageman.html}recommends}}
  to use <<<MANIFEST.MF>>> for versioning of a Java application.
  We also recommend to use
  {{{./apidocs-${project.version}/com/jcabi/manifests/Manifests.html}<<<Manifests>>>}}
  utility class for reading version data in runtime. For example, you're
  developing a web application and want to show its currently deployed
  version number somewhere in the HTML page. You can see how it works,
  for example, in {{{http://www.s3auth.com/}www.s3auth.com}}. Pay attention
  to the small gray rectangle at the right bottom corner of the HTML page.
  It contains the version of the application and its Git revision hash. Every
  time a new version is deployed to the production server we see a new
  hash there. It is very convenient for developers and end-users.

  You can see how it is done in {{{http://www.s3auth.com/}www.s3auth.com}}
  by reading their
  {{{https://github.com/yegor256/s3auth/blob/master/s3auth-rest/pom.xml}<<<pom.xml>>>}}
  at Github. Let's reproduce it here step by step.

  First, you should retrieve the revision number from your SCM (either it is
  Git, SVN, Mercurial, or something similar). We're using
  {{{http://mojo.codehaus.org/buildnumber-maven-plugin/}buildnumber-maven-plugin}}:

+--
<build>
  <plugins>
    [...]
    <plugin>
      <groupId>org.codehaus.mojo</groupId>
      <artifactId>buildnumber-maven-plugin</artifactId>
      <version>1.1</version>
      <executions>
        <execution>
          <goals>
            <goal>create</goal>
          </goals>
        </execution>
      </executions>
    </plugin>
  </plugins>
</build>
+--

  With a default configuration this plugin will retrieve revision number
  and save it into <<<buildNumber>>> Maven property.

  The next step is to set your custom
  <<<META-INF/MANIFEST.MF>>> attribute to this generated value.
  {{{http://maven.apache.org/plugins/maven-war-plugin/}maven-war-plugin}} has
  a special configuration property exactly for this purpose:

+--
<plugin>
  <artifactId>maven-war-plugin</artifactId>
  <configuration>
    <archive>
      <manifestEntries>
        <My-Version>${sign}{project.version}</My-Version>
        <My-Hash>${sign}{buildNumber}</My-Hash>
      </manifestEntries>
    </archive>
  </configuration>
</plugin>
+--

  After packaging of your WAR artifact take a look at
  <<<META-INF/MANIFEST.MF>>> file. You will see something like this
  (if you're using Git):

+--
My-Version: 1.0-SNAPSHOT
My-Hash: d1cd2d628c3b56ab2766a0a658c040724e13d3ba
+--

  The last and final step is to read these values in the application
  and show them to the end-user inside HTML. If you're using JSP:

+--
<html>
  <body>
    [...]
    <div id="version">
      <%= com.jcabi.manifests.Manifests.read("My-Version") %>
      <%= com.jcabi.manifests.Manifests.read("My-Hash") %>
    </div>
  </body>
</html>
+--

  That's it.
